name: NPM Publish

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (major, minor, patch, or specific version)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - prerelease
          - prepatch
          - preminor
          - premajor
      tag:
        description: 'NPM tag (latest, next, beta)'
        required: true
        default: 'latest'
        type: choice
        options:
          - latest
          - next
          - beta
          - alpha
      dry-run:
        description: 'Perform a dry run without publishing'
        required: false
        default: false
        type: boolean

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Configure Git
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "actions@github.com"
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        always-auth: true
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Build library
      run: npm run build
    
    - name: Check NPM authentication
      run: npm whoami
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Version bump (dry run)
      if: ${{ inputs.dry-run }}
      run: |
        echo "Dry run mode - would bump version:"
        npm version ${{ inputs.version }} --no-git-tag-version
        NEW_VERSION=$(node -p "require('./package.json').version")
        echo "New version would be: $NEW_VERSION"
        git checkout -- package.json package-lock.json
    
    - name: Version bump and commit
      if: ${{ !inputs.dry-run }}
      id: version
      run: |
        # Bump version
        npm version ${{ inputs.version }} --no-git-tag-version
        NEW_VERSION=$(node -p "require('./package.json').version")
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        
        # Commit version bump
        git add package.json package-lock.json
        git commit -m "chore: bump version to v${NEW_VERSION}

        ðŸ¤– Generated with [Claude Code](https://claude.ai/code)

        Co-Authored-By: Claude <noreply@anthropic.com>"
        
        # Create and push tag
        git tag -a "v${NEW_VERSION}" -m "Release v${NEW_VERSION}"
        git push origin main --follow-tags
    
    - name: Publish to NPM (dry run)
      if: ${{ inputs.dry-run }}
      run: |
        echo "Dry run mode - would publish to NPM with tag: ${{ inputs.tag }}"
        npm pack --dry-run
        echo "Package contents:"
        npm pack --dry-run 2>&1 | grep -E "npm notice"
    
    - name: Publish to NPM
      if: ${{ !inputs.dry-run }}
      run: |
        npm publish --access public --tag ${{ inputs.tag }}
        echo "Published version ${{ steps.version.outputs.new_version }} to NPM with tag: ${{ inputs.tag }}"
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Create release summary
      if: ${{ !inputs.dry-run }}
      run: |
        echo "# NPM Publish Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Published Package" >> $GITHUB_STEP_SUMMARY
        echo "- **Package**: @spknetwork/spk-js" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: ${{ steps.version.outputs.new_version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Tag**: ${{ inputs.tag }}" >> $GITHUB_STEP_SUMMARY
        echo "- **NPM URL**: [View on NPM](https://www.npmjs.com/package/@spknetwork/spk-js/v/${{ steps.version.outputs.new_version }})" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Installation" >> $GITHUB_STEP_SUMMARY
        echo '```bash' >> $GITHUB_STEP_SUMMARY
        if [ "${{ inputs.tag }}" = "latest" ]; then
          echo "npm install @spknetwork/spk-js" >> $GITHUB_STEP_SUMMARY
        else
          echo "npm install @spknetwork/spk-js@${{ inputs.tag }}" >> $GITHUB_STEP_SUMMARY
        fi
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "- Check the package on [npmjs.com](https://www.npmjs.com/package/@spknetwork/spk-js)" >> $GITHUB_STEP_SUMMARY
        echo "- Test installation in a new project" >> $GITHUB_STEP_SUMMARY
        echo "- Update documentation if needed" >> $GITHUB_STEP_SUMMARY
    
    - name: Dry run summary
      if: ${{ inputs.dry-run }}
      run: |
        echo "# NPM Publish Dry Run Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "This was a dry run. No changes were made." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## What would have happened:" >> $GITHUB_STEP_SUMMARY
        echo "- Version bump: ${{ inputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "- NPM tag: ${{ inputs.tag }}" >> $GITHUB_STEP_SUMMARY
        echo "- Git tag would be created and pushed" >> $GITHUB_STEP_SUMMARY
        echo "- Package would be published to NPM" >> $GITHUB_STEP_SUMMARY